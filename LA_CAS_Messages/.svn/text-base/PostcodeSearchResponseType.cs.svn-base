//
// PostcodeSearchResponseType.cs
//
// This file was generated by XMLSpy 2011r3sp1 Enterprise Edition.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the XMLSpy Documentation for further details.
// http://www.altova.com/xmlspy
//


using System;
using System.Collections;
using System.Xml;
using Altova.Types;

namespace LA_CAS_Messages
{
	public class PostcodeSearchResponseType : Altova.Xml.Node
	{
		#region Forward constructors

		public PostcodeSearchResponseType() : base() { SetCollectionParents(); }

		public PostcodeSearchResponseType(XmlDocument doc) : base(doc) { SetCollectionParents(); }
		public PostcodeSearchResponseType(XmlNode node) : base(node) { SetCollectionParents(); }
		public PostcodeSearchResponseType(Altova.Xml.Node node) : base(node) { SetCollectionParents(); }
		public PostcodeSearchResponseType(Altova.Xml.Document doc, string namespaceURI, string prefix, string name) : base(doc, namespaceURI, prefix, name) { SetCollectionParents(); }
		#endregion // Forward constructors

		public override void AdjustPrefix()
		{

		    for (	XmlNode DOMNode = GetDomFirstChild( NodeType.Element, "", "UPRNDetails" );
					DOMNode != null; 
					DOMNode = GetDomNextChild( NodeType.Element, "", "UPRNDetails", DOMNode )
				)
			{
				InternalAdjustPrefix(DOMNode, false);
				new core3.PropertyDetailsType(DOMNode).AdjustPrefix();
			}
		}

		public void SetXsiType()
		{
 			XmlElement el = (XmlElement) domNode;
			el.SetAttribute("type", "http://www.w3.org/2001/XMLSchema-instance", "PostcodeSearchResponse");
		}


		#region UPRNDetails accessor methods
		public static int GetUPRNDetailsMinCount()
		{
			return 0;
		}

		public static int UPRNDetailsMinCount
		{
			get
			{
				return 0;
			}
		}

		public static int GetUPRNDetailsMaxCount()
		{
			return Int32.MaxValue;
		}

		public static int UPRNDetailsMaxCount
		{
			get
			{
				return Int32.MaxValue;
			}
		}

		public int GetUPRNDetailsCount()
		{
			return DomChildCount(NodeType.Element, "", "UPRNDetails");
		}

		public int UPRNDetailsCount
		{
			get
			{
				return DomChildCount(NodeType.Element, "", "UPRNDetails");
			}
		}

		public bool HasUPRNDetails()
		{
			return HasDomChild(NodeType.Element, "", "UPRNDetails");
		}

		public core3.PropertyDetailsType NewUPRNDetails()
		{
			return new core3.PropertyDetailsType(domNode.OwnerDocument.CreateElement("UPRNDetails", ""));
		}

		public core3.PropertyDetailsType GetUPRNDetailsAt(int index)
		{
			return new core3.PropertyDetailsType(GetDomChildAt(NodeType.Element, "", "UPRNDetails", index));
		}

		public XmlNode GetStartingUPRNDetailsCursor()
		{
			return GetDomFirstChild( NodeType.Element, "", "UPRNDetails" );
		}

		public XmlNode GetAdvancedUPRNDetailsCursor( XmlNode curNode )
		{
			return GetDomNextChild( NodeType.Element, "", "UPRNDetails", curNode );
		}

		public core3.PropertyDetailsType GetUPRNDetailsValueAtCursor( XmlNode curNode )
		{
			if( curNode == null )
				  throw new Altova.Xml.XmlException("Out of range");
			else
				return new core3.PropertyDetailsType( curNode );
		}


		public core3.PropertyDetailsType GetUPRNDetails()
		{
			return GetUPRNDetailsAt(0);
		}

		public core3.PropertyDetailsType UPRNDetails
		{
			get
			{
				return GetUPRNDetailsAt(0);
			}
		}

		public void RemoveUPRNDetailsAt(int index)
		{
			RemoveDomChildAt(NodeType.Element, "", "UPRNDetails", index);
		}

		public void RemoveUPRNDetails()
		{
			while (HasUPRNDetails())
				RemoveUPRNDetailsAt(0);
		}

		public XmlNode AddUPRNDetails(core3.PropertyDetailsType newValue)
		{
			return AppendDomElement("", "UPRNDetails", newValue);
		}

		public void InsertUPRNDetailsAt(core3.PropertyDetailsType newValue, int index)
		{
			InsertDomElementAt("", "UPRNDetails", index, newValue);
		}

		public void ReplaceUPRNDetailsAt(core3.PropertyDetailsType newValue, int index)
		{
			ReplaceDomElementAt("", "UPRNDetails", index, newValue);
		}
		#endregion // UPRNDetails accessor methods

		#region UPRNDetails collection
        public UPRNDetailsCollection	MyUPRNDetailss = new UPRNDetailsCollection( );

        public class UPRNDetailsCollection: IEnumerable
        {
            PostcodeSearchResponseType parent;
            public PostcodeSearchResponseType Parent
			{
				set
				{
					parent = value;
				}
			}
			public UPRNDetailsEnumerator GetEnumerator() 
			{
				return new UPRNDetailsEnumerator(parent);
			}
		
			IEnumerator IEnumerable.GetEnumerator() 
			{
				return GetEnumerator();
			}
        }

        public class UPRNDetailsEnumerator: IEnumerator 
        {
			int nIndex;
			PostcodeSearchResponseType parent;
			public UPRNDetailsEnumerator(PostcodeSearchResponseType par) 
			{
				parent = par;
				nIndex = -1;
			}
			public void Reset() 
			{
				nIndex = -1;
			}
			public bool MoveNext() 
			{
				nIndex++;
				return(nIndex < parent.UPRNDetailsCount );
			}
			public core3.PropertyDetailsType  Current 
			{
				get 
				{
					return(parent.GetUPRNDetailsAt(nIndex));
				}
			}
			object IEnumerator.Current 
			{
				get 
				{
					return(Current);
				}
			}
    	}

        #endregion // UPRNDetails collection

        private void SetCollectionParents()
        {
            MyUPRNDetailss.Parent = this; 
	}
}
}
