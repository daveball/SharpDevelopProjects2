//
// BLPUextentStructure.cs
//
// This file was generated by XMLSpy 2012r2 Enterprise Edition.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the XMLSpy Documentation for further details.
// http://www.altova.com/xmlspy
//


using System;
using System.Collections;
using System.Xml;
using Altova.Types;

namespace SeoQueryUCRN_v0_1.bs76662
{
	public class BLPUextentStructure : Altova.Xml.Node
	{
		#region Forward constructors

		public BLPUextentStructure() : base() { SetCollectionParents(); }

		public BLPUextentStructure(XmlDocument doc) : base(doc) { SetCollectionParents(); }
		public BLPUextentStructure(XmlNode node) : base(node) { SetCollectionParents(); }
		public BLPUextentStructure(Altova.Xml.Node node) : base(node) { SetCollectionParents(); }
		public BLPUextentStructure(Altova.Xml.Document doc, string namespaceURI, string prefix, string name) : base(doc, namespaceURI, prefix, name) { SetCollectionParents(); }
		#endregion // Forward constructors

		public override void AdjustPrefix()
		{

		    for (	XmlNode DOMNode = GetDomFirstChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "SourceDescription" );
					DOMNode != null; 
					DOMNode = GetDomNextChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "SourceDescription", DOMNode )
				)
			{
				InternalAdjustPrefix(DOMNode, true);
			}

		    for (	XmlNode DOMNode = GetDomFirstChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentEntryDate" );
					DOMNode != null; 
					DOMNode = GetDomNextChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentEntryDate", DOMNode )
				)
			{
				InternalAdjustPrefix(DOMNode, true);
			}

		    for (	XmlNode DOMNode = GetDomFirstChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentSourceDate" );
					DOMNode != null; 
					DOMNode = GetDomNextChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentSourceDate", DOMNode )
				)
			{
				InternalAdjustPrefix(DOMNode, true);
			}

		    for (	XmlNode DOMNode = GetDomFirstChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentStartDate" );
					DOMNode != null; 
					DOMNode = GetDomNextChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentStartDate", DOMNode )
				)
			{
				InternalAdjustPrefix(DOMNode, true);
			}

		    for (	XmlNode DOMNode = GetDomFirstChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentEndDate" );
					DOMNode != null; 
					DOMNode = GetDomNextChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentEndDate", DOMNode )
				)
			{
				InternalAdjustPrefix(DOMNode, true);
			}

		    for (	XmlNode DOMNode = GetDomFirstChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentLastUpdateDate" );
					DOMNode != null; 
					DOMNode = GetDomNextChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentLastUpdateDate", DOMNode )
				)
			{
				InternalAdjustPrefix(DOMNode, true);
			}

		    for (	XmlNode DOMNode = GetDomFirstChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentDefinition" );
					DOMNode != null; 
					DOMNode = GetDomNextChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentDefinition", DOMNode )
				)
			{
				InternalAdjustPrefix(DOMNode, true);
				new BLPUpolygonStructure(DOMNode).AdjustPrefix();
			}
		}

		public void SetXsiType()
		{
 			XmlElement el = (XmlElement) domNode;
			el.SetAttribute("type", "http://www.w3.org/2001/XMLSchema-instance", "bs7666:BLPUextentStructure");
		}


		#region SourceDescription accessor methods
		public static int GetSourceDescriptionMinCount()
		{
			return 1;
		}

		public static int SourceDescriptionMinCount
		{
			get
			{
				return 1;
			}
		}

		public static int GetSourceDescriptionMaxCount()
		{
			return 1;
		}

		public static int SourceDescriptionMaxCount
		{
			get
			{
				return 1;
			}
		}

		public int GetSourceDescriptionCount()
		{
			return DomChildCount(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "SourceDescription");
		}

		public int SourceDescriptionCount
		{
			get
			{
				return DomChildCount(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "SourceDescription");
			}
		}

		public bool HasSourceDescription()
		{
			return HasDomChild(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "SourceDescription");
		}

		public SourceDescriptionType NewSourceDescription()
		{
			return new SourceDescriptionType();
		}

		public SourceDescriptionType GetSourceDescriptionAt(int index)
		{
			return new SourceDescriptionType(GetDomNodeValue(GetDomChildAt(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "SourceDescription", index)));
		}

		public XmlNode GetStartingSourceDescriptionCursor()
		{
			return GetDomFirstChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "SourceDescription" );
		}

		public XmlNode GetAdvancedSourceDescriptionCursor( XmlNode curNode )
		{
			return GetDomNextChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "SourceDescription", curNode );
		}

		public SourceDescriptionType GetSourceDescriptionValueAtCursor( XmlNode curNode )
		{
			if( curNode == null )
				  throw new Altova.Xml.XmlException("Out of range");
			else
				return new SourceDescriptionType( curNode.InnerText );
		}


		public SourceDescriptionType GetSourceDescription()
		{
			return GetSourceDescriptionAt(0);
		}

		public SourceDescriptionType SourceDescription
		{
			get
			{
				return GetSourceDescriptionAt(0);
			}
		}

		public void RemoveSourceDescriptionAt(int index)
		{
			RemoveDomChildAt(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "SourceDescription", index);
		}

		public void RemoveSourceDescription()
		{
			RemoveSourceDescriptionAt(0);
		}

		public XmlNode AddSourceDescription(SourceDescriptionType newValue)
		{
			if( newValue.IsNull() == false )
				return AppendDomChild(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "SourceDescription", newValue.ToString());
			return null;
		}

		public void InsertSourceDescriptionAt(SourceDescriptionType newValue, int index)
		{
			if( newValue.IsNull() == false )
				InsertDomChildAt(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "SourceDescription", index, newValue.ToString());
		}

		public void ReplaceSourceDescriptionAt(SourceDescriptionType newValue, int index)
		{
			ReplaceDomChildAt(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "SourceDescription", index, newValue.ToString());
		}
		#endregion // SourceDescription accessor methods

		#region SourceDescription collection
        public SourceDescriptionCollection	MySourceDescriptions = new SourceDescriptionCollection( );

        public class SourceDescriptionCollection: IEnumerable
        {
            BLPUextentStructure parent;
            public BLPUextentStructure Parent
			{
				set
				{
					parent = value;
				}
			}
			public SourceDescriptionEnumerator GetEnumerator() 
			{
				return new SourceDescriptionEnumerator(parent);
			}
		
			IEnumerator IEnumerable.GetEnumerator() 
			{
				return GetEnumerator();
			}
        }

        public class SourceDescriptionEnumerator: IEnumerator 
        {
			int nIndex;
			BLPUextentStructure parent;
			public SourceDescriptionEnumerator(BLPUextentStructure par) 
			{
				parent = par;
				nIndex = -1;
			}
			public void Reset() 
			{
				nIndex = -1;
			}
			public bool MoveNext() 
			{
				nIndex++;
				return(nIndex < parent.SourceDescriptionCount );
			}
			public SourceDescriptionType  Current 
			{
				get 
				{
					return(parent.GetSourceDescriptionAt(nIndex));
				}
			}
			object IEnumerator.Current 
			{
				get 
				{
					return(Current);
				}
			}
    	}

        #endregion // SourceDescription collection

		#region ExtentEntryDate accessor methods
		public static int GetExtentEntryDateMinCount()
		{
			return 1;
		}

		public static int ExtentEntryDateMinCount
		{
			get
			{
				return 1;
			}
		}

		public static int GetExtentEntryDateMaxCount()
		{
			return 1;
		}

		public static int ExtentEntryDateMaxCount
		{
			get
			{
				return 1;
			}
		}

		public int GetExtentEntryDateCount()
		{
			return DomChildCount(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentEntryDate");
		}

		public int ExtentEntryDateCount
		{
			get
			{
				return DomChildCount(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentEntryDate");
			}
		}

		public bool HasExtentEntryDate()
		{
			return HasDomChild(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentEntryDate");
		}

		public SchemaDate NewExtentEntryDate()
		{
			return new SchemaDate();
		}

		public SchemaDate GetExtentEntryDateAt(int index)
		{
			return new SchemaDate(GetDomNodeValue(GetDomChildAt(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentEntryDate", index)));
		}

		public XmlNode GetStartingExtentEntryDateCursor()
		{
			return GetDomFirstChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentEntryDate" );
		}

		public XmlNode GetAdvancedExtentEntryDateCursor( XmlNode curNode )
		{
			return GetDomNextChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentEntryDate", curNode );
		}

		public SchemaDate GetExtentEntryDateValueAtCursor( XmlNode curNode )
		{
			if( curNode == null )
				  throw new Altova.Xml.XmlException("Out of range");
			else
				return new SchemaDate( curNode.InnerText );
		}


		public SchemaDate GetExtentEntryDate()
		{
			return GetExtentEntryDateAt(0);
		}

		public SchemaDate ExtentEntryDate
		{
			get
			{
				return GetExtentEntryDateAt(0);
			}
		}

		public void RemoveExtentEntryDateAt(int index)
		{
			RemoveDomChildAt(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentEntryDate", index);
		}

		public void RemoveExtentEntryDate()
		{
			RemoveExtentEntryDateAt(0);
		}

		public XmlNode AddExtentEntryDate(SchemaDate newValue)
		{
			if( newValue.IsNull() == false )
				return AppendDomChild(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentEntryDate", newValue.ToString());
			return null;
		}

		public void InsertExtentEntryDateAt(SchemaDate newValue, int index)
		{
			if( newValue.IsNull() == false )
				InsertDomChildAt(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentEntryDate", index, newValue.ToString());
		}

		public void ReplaceExtentEntryDateAt(SchemaDate newValue, int index)
		{
			ReplaceDomChildAt(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentEntryDate", index, newValue.ToString());
		}
		#endregion // ExtentEntryDate accessor methods

		#region ExtentEntryDate collection
        public ExtentEntryDateCollection	MyExtentEntryDates = new ExtentEntryDateCollection( );

        public class ExtentEntryDateCollection: IEnumerable
        {
            BLPUextentStructure parent;
            public BLPUextentStructure Parent
			{
				set
				{
					parent = value;
				}
			}
			public ExtentEntryDateEnumerator GetEnumerator() 
			{
				return new ExtentEntryDateEnumerator(parent);
			}
		
			IEnumerator IEnumerable.GetEnumerator() 
			{
				return GetEnumerator();
			}
        }

        public class ExtentEntryDateEnumerator: IEnumerator 
        {
			int nIndex;
			BLPUextentStructure parent;
			public ExtentEntryDateEnumerator(BLPUextentStructure par) 
			{
				parent = par;
				nIndex = -1;
			}
			public void Reset() 
			{
				nIndex = -1;
			}
			public bool MoveNext() 
			{
				nIndex++;
				return(nIndex < parent.ExtentEntryDateCount );
			}
			public SchemaDate  Current 
			{
				get 
				{
					return(parent.GetExtentEntryDateAt(nIndex));
				}
			}
			object IEnumerator.Current 
			{
				get 
				{
					return(Current);
				}
			}
    	}

        #endregion // ExtentEntryDate collection

		#region ExtentSourceDate accessor methods
		public static int GetExtentSourceDateMinCount()
		{
			return 1;
		}

		public static int ExtentSourceDateMinCount
		{
			get
			{
				return 1;
			}
		}

		public static int GetExtentSourceDateMaxCount()
		{
			return 1;
		}

		public static int ExtentSourceDateMaxCount
		{
			get
			{
				return 1;
			}
		}

		public int GetExtentSourceDateCount()
		{
			return DomChildCount(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentSourceDate");
		}

		public int ExtentSourceDateCount
		{
			get
			{
				return DomChildCount(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentSourceDate");
			}
		}

		public bool HasExtentSourceDate()
		{
			return HasDomChild(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentSourceDate");
		}

		public SchemaDate NewExtentSourceDate()
		{
			return new SchemaDate();
		}

		public SchemaDate GetExtentSourceDateAt(int index)
		{
			return new SchemaDate(GetDomNodeValue(GetDomChildAt(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentSourceDate", index)));
		}

		public XmlNode GetStartingExtentSourceDateCursor()
		{
			return GetDomFirstChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentSourceDate" );
		}

		public XmlNode GetAdvancedExtentSourceDateCursor( XmlNode curNode )
		{
			return GetDomNextChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentSourceDate", curNode );
		}

		public SchemaDate GetExtentSourceDateValueAtCursor( XmlNode curNode )
		{
			if( curNode == null )
				  throw new Altova.Xml.XmlException("Out of range");
			else
				return new SchemaDate( curNode.InnerText );
		}


		public SchemaDate GetExtentSourceDate()
		{
			return GetExtentSourceDateAt(0);
		}

		public SchemaDate ExtentSourceDate
		{
			get
			{
				return GetExtentSourceDateAt(0);
			}
		}

		public void RemoveExtentSourceDateAt(int index)
		{
			RemoveDomChildAt(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentSourceDate", index);
		}

		public void RemoveExtentSourceDate()
		{
			RemoveExtentSourceDateAt(0);
		}

		public XmlNode AddExtentSourceDate(SchemaDate newValue)
		{
			if( newValue.IsNull() == false )
				return AppendDomChild(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentSourceDate", newValue.ToString());
			return null;
		}

		public void InsertExtentSourceDateAt(SchemaDate newValue, int index)
		{
			if( newValue.IsNull() == false )
				InsertDomChildAt(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentSourceDate", index, newValue.ToString());
		}

		public void ReplaceExtentSourceDateAt(SchemaDate newValue, int index)
		{
			ReplaceDomChildAt(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentSourceDate", index, newValue.ToString());
		}
		#endregion // ExtentSourceDate accessor methods

		#region ExtentSourceDate collection
        public ExtentSourceDateCollection	MyExtentSourceDates = new ExtentSourceDateCollection( );

        public class ExtentSourceDateCollection: IEnumerable
        {
            BLPUextentStructure parent;
            public BLPUextentStructure Parent
			{
				set
				{
					parent = value;
				}
			}
			public ExtentSourceDateEnumerator GetEnumerator() 
			{
				return new ExtentSourceDateEnumerator(parent);
			}
		
			IEnumerator IEnumerable.GetEnumerator() 
			{
				return GetEnumerator();
			}
        }

        public class ExtentSourceDateEnumerator: IEnumerator 
        {
			int nIndex;
			BLPUextentStructure parent;
			public ExtentSourceDateEnumerator(BLPUextentStructure par) 
			{
				parent = par;
				nIndex = -1;
			}
			public void Reset() 
			{
				nIndex = -1;
			}
			public bool MoveNext() 
			{
				nIndex++;
				return(nIndex < parent.ExtentSourceDateCount );
			}
			public SchemaDate  Current 
			{
				get 
				{
					return(parent.GetExtentSourceDateAt(nIndex));
				}
			}
			object IEnumerator.Current 
			{
				get 
				{
					return(Current);
				}
			}
    	}

        #endregion // ExtentSourceDate collection

		#region ExtentStartDate accessor methods
		public static int GetExtentStartDateMinCount()
		{
			return 1;
		}

		public static int ExtentStartDateMinCount
		{
			get
			{
				return 1;
			}
		}

		public static int GetExtentStartDateMaxCount()
		{
			return 1;
		}

		public static int ExtentStartDateMaxCount
		{
			get
			{
				return 1;
			}
		}

		public int GetExtentStartDateCount()
		{
			return DomChildCount(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentStartDate");
		}

		public int ExtentStartDateCount
		{
			get
			{
				return DomChildCount(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentStartDate");
			}
		}

		public bool HasExtentStartDate()
		{
			return HasDomChild(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentStartDate");
		}

		public SchemaDate NewExtentStartDate()
		{
			return new SchemaDate();
		}

		public SchemaDate GetExtentStartDateAt(int index)
		{
			return new SchemaDate(GetDomNodeValue(GetDomChildAt(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentStartDate", index)));
		}

		public XmlNode GetStartingExtentStartDateCursor()
		{
			return GetDomFirstChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentStartDate" );
		}

		public XmlNode GetAdvancedExtentStartDateCursor( XmlNode curNode )
		{
			return GetDomNextChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentStartDate", curNode );
		}

		public SchemaDate GetExtentStartDateValueAtCursor( XmlNode curNode )
		{
			if( curNode == null )
				  throw new Altova.Xml.XmlException("Out of range");
			else
				return new SchemaDate( curNode.InnerText );
		}


		public SchemaDate GetExtentStartDate()
		{
			return GetExtentStartDateAt(0);
		}

		public SchemaDate ExtentStartDate
		{
			get
			{
				return GetExtentStartDateAt(0);
			}
		}

		public void RemoveExtentStartDateAt(int index)
		{
			RemoveDomChildAt(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentStartDate", index);
		}

		public void RemoveExtentStartDate()
		{
			RemoveExtentStartDateAt(0);
		}

		public XmlNode AddExtentStartDate(SchemaDate newValue)
		{
			if( newValue.IsNull() == false )
				return AppendDomChild(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentStartDate", newValue.ToString());
			return null;
		}

		public void InsertExtentStartDateAt(SchemaDate newValue, int index)
		{
			if( newValue.IsNull() == false )
				InsertDomChildAt(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentStartDate", index, newValue.ToString());
		}

		public void ReplaceExtentStartDateAt(SchemaDate newValue, int index)
		{
			ReplaceDomChildAt(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentStartDate", index, newValue.ToString());
		}
		#endregion // ExtentStartDate accessor methods

		#region ExtentStartDate collection
        public ExtentStartDateCollection	MyExtentStartDates = new ExtentStartDateCollection( );

        public class ExtentStartDateCollection: IEnumerable
        {
            BLPUextentStructure parent;
            public BLPUextentStructure Parent
			{
				set
				{
					parent = value;
				}
			}
			public ExtentStartDateEnumerator GetEnumerator() 
			{
				return new ExtentStartDateEnumerator(parent);
			}
		
			IEnumerator IEnumerable.GetEnumerator() 
			{
				return GetEnumerator();
			}
        }

        public class ExtentStartDateEnumerator: IEnumerator 
        {
			int nIndex;
			BLPUextentStructure parent;
			public ExtentStartDateEnumerator(BLPUextentStructure par) 
			{
				parent = par;
				nIndex = -1;
			}
			public void Reset() 
			{
				nIndex = -1;
			}
			public bool MoveNext() 
			{
				nIndex++;
				return(nIndex < parent.ExtentStartDateCount );
			}
			public SchemaDate  Current 
			{
				get 
				{
					return(parent.GetExtentStartDateAt(nIndex));
				}
			}
			object IEnumerator.Current 
			{
				get 
				{
					return(Current);
				}
			}
    	}

        #endregion // ExtentStartDate collection

		#region ExtentEndDate accessor methods
		public static int GetExtentEndDateMinCount()
		{
			return 0;
		}

		public static int ExtentEndDateMinCount
		{
			get
			{
				return 0;
			}
		}

		public static int GetExtentEndDateMaxCount()
		{
			return 1;
		}

		public static int ExtentEndDateMaxCount
		{
			get
			{
				return 1;
			}
		}

		public int GetExtentEndDateCount()
		{
			return DomChildCount(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentEndDate");
		}

		public int ExtentEndDateCount
		{
			get
			{
				return DomChildCount(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentEndDate");
			}
		}

		public bool HasExtentEndDate()
		{
			return HasDomChild(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentEndDate");
		}

		public SchemaDate NewExtentEndDate()
		{
			return new SchemaDate();
		}

		public SchemaDate GetExtentEndDateAt(int index)
		{
			return new SchemaDate(GetDomNodeValue(GetDomChildAt(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentEndDate", index)));
		}

		public XmlNode GetStartingExtentEndDateCursor()
		{
			return GetDomFirstChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentEndDate" );
		}

		public XmlNode GetAdvancedExtentEndDateCursor( XmlNode curNode )
		{
			return GetDomNextChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentEndDate", curNode );
		}

		public SchemaDate GetExtentEndDateValueAtCursor( XmlNode curNode )
		{
			if( curNode == null )
				  throw new Altova.Xml.XmlException("Out of range");
			else
				return new SchemaDate( curNode.InnerText );
		}


		public SchemaDate GetExtentEndDate()
		{
			return GetExtentEndDateAt(0);
		}

		public SchemaDate ExtentEndDate
		{
			get
			{
				return GetExtentEndDateAt(0);
			}
		}

		public void RemoveExtentEndDateAt(int index)
		{
			RemoveDomChildAt(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentEndDate", index);
		}

		public void RemoveExtentEndDate()
		{
			RemoveExtentEndDateAt(0);
		}

		public XmlNode AddExtentEndDate(SchemaDate newValue)
		{
			if( newValue.IsNull() == false )
				return AppendDomChild(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentEndDate", newValue.ToString());
			return null;
		}

		public void InsertExtentEndDateAt(SchemaDate newValue, int index)
		{
			if( newValue.IsNull() == false )
				InsertDomChildAt(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentEndDate", index, newValue.ToString());
		}

		public void ReplaceExtentEndDateAt(SchemaDate newValue, int index)
		{
			ReplaceDomChildAt(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentEndDate", index, newValue.ToString());
		}
		#endregion // ExtentEndDate accessor methods

		#region ExtentEndDate collection
        public ExtentEndDateCollection	MyExtentEndDates = new ExtentEndDateCollection( );

        public class ExtentEndDateCollection: IEnumerable
        {
            BLPUextentStructure parent;
            public BLPUextentStructure Parent
			{
				set
				{
					parent = value;
				}
			}
			public ExtentEndDateEnumerator GetEnumerator() 
			{
				return new ExtentEndDateEnumerator(parent);
			}
		
			IEnumerator IEnumerable.GetEnumerator() 
			{
				return GetEnumerator();
			}
        }

        public class ExtentEndDateEnumerator: IEnumerator 
        {
			int nIndex;
			BLPUextentStructure parent;
			public ExtentEndDateEnumerator(BLPUextentStructure par) 
			{
				parent = par;
				nIndex = -1;
			}
			public void Reset() 
			{
				nIndex = -1;
			}
			public bool MoveNext() 
			{
				nIndex++;
				return(nIndex < parent.ExtentEndDateCount );
			}
			public SchemaDate  Current 
			{
				get 
				{
					return(parent.GetExtentEndDateAt(nIndex));
				}
			}
			object IEnumerator.Current 
			{
				get 
				{
					return(Current);
				}
			}
    	}

        #endregion // ExtentEndDate collection

		#region ExtentLastUpdateDate accessor methods
		public static int GetExtentLastUpdateDateMinCount()
		{
			return 1;
		}

		public static int ExtentLastUpdateDateMinCount
		{
			get
			{
				return 1;
			}
		}

		public static int GetExtentLastUpdateDateMaxCount()
		{
			return 1;
		}

		public static int ExtentLastUpdateDateMaxCount
		{
			get
			{
				return 1;
			}
		}

		public int GetExtentLastUpdateDateCount()
		{
			return DomChildCount(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentLastUpdateDate");
		}

		public int ExtentLastUpdateDateCount
		{
			get
			{
				return DomChildCount(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentLastUpdateDate");
			}
		}

		public bool HasExtentLastUpdateDate()
		{
			return HasDomChild(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentLastUpdateDate");
		}

		public SchemaDate NewExtentLastUpdateDate()
		{
			return new SchemaDate();
		}

		public SchemaDate GetExtentLastUpdateDateAt(int index)
		{
			return new SchemaDate(GetDomNodeValue(GetDomChildAt(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentLastUpdateDate", index)));
		}

		public XmlNode GetStartingExtentLastUpdateDateCursor()
		{
			return GetDomFirstChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentLastUpdateDate" );
		}

		public XmlNode GetAdvancedExtentLastUpdateDateCursor( XmlNode curNode )
		{
			return GetDomNextChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentLastUpdateDate", curNode );
		}

		public SchemaDate GetExtentLastUpdateDateValueAtCursor( XmlNode curNode )
		{
			if( curNode == null )
				  throw new Altova.Xml.XmlException("Out of range");
			else
				return new SchemaDate( curNode.InnerText );
		}


		public SchemaDate GetExtentLastUpdateDate()
		{
			return GetExtentLastUpdateDateAt(0);
		}

		public SchemaDate ExtentLastUpdateDate
		{
			get
			{
				return GetExtentLastUpdateDateAt(0);
			}
		}

		public void RemoveExtentLastUpdateDateAt(int index)
		{
			RemoveDomChildAt(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentLastUpdateDate", index);
		}

		public void RemoveExtentLastUpdateDate()
		{
			RemoveExtentLastUpdateDateAt(0);
		}

		public XmlNode AddExtentLastUpdateDate(SchemaDate newValue)
		{
			if( newValue.IsNull() == false )
				return AppendDomChild(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentLastUpdateDate", newValue.ToString());
			return null;
		}

		public void InsertExtentLastUpdateDateAt(SchemaDate newValue, int index)
		{
			if( newValue.IsNull() == false )
				InsertDomChildAt(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentLastUpdateDate", index, newValue.ToString());
		}

		public void ReplaceExtentLastUpdateDateAt(SchemaDate newValue, int index)
		{
			ReplaceDomChildAt(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentLastUpdateDate", index, newValue.ToString());
		}
		#endregion // ExtentLastUpdateDate accessor methods

		#region ExtentLastUpdateDate collection
        public ExtentLastUpdateDateCollection	MyExtentLastUpdateDates = new ExtentLastUpdateDateCollection( );

        public class ExtentLastUpdateDateCollection: IEnumerable
        {
            BLPUextentStructure parent;
            public BLPUextentStructure Parent
			{
				set
				{
					parent = value;
				}
			}
			public ExtentLastUpdateDateEnumerator GetEnumerator() 
			{
				return new ExtentLastUpdateDateEnumerator(parent);
			}
		
			IEnumerator IEnumerable.GetEnumerator() 
			{
				return GetEnumerator();
			}
        }

        public class ExtentLastUpdateDateEnumerator: IEnumerator 
        {
			int nIndex;
			BLPUextentStructure parent;
			public ExtentLastUpdateDateEnumerator(BLPUextentStructure par) 
			{
				parent = par;
				nIndex = -1;
			}
			public void Reset() 
			{
				nIndex = -1;
			}
			public bool MoveNext() 
			{
				nIndex++;
				return(nIndex < parent.ExtentLastUpdateDateCount );
			}
			public SchemaDate  Current 
			{
				get 
				{
					return(parent.GetExtentLastUpdateDateAt(nIndex));
				}
			}
			object IEnumerator.Current 
			{
				get 
				{
					return(Current);
				}
			}
    	}

        #endregion // ExtentLastUpdateDate collection

		#region ExtentDefinition accessor methods
		public static int GetExtentDefinitionMinCount()
		{
			return 1;
		}

		public static int ExtentDefinitionMinCount
		{
			get
			{
				return 1;
			}
		}

		public static int GetExtentDefinitionMaxCount()
		{
			return Int32.MaxValue;
		}

		public static int ExtentDefinitionMaxCount
		{
			get
			{
				return Int32.MaxValue;
			}
		}

		public int GetExtentDefinitionCount()
		{
			return DomChildCount(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentDefinition");
		}

		public int ExtentDefinitionCount
		{
			get
			{
				return DomChildCount(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentDefinition");
			}
		}

		public bool HasExtentDefinition()
		{
			return HasDomChild(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentDefinition");
		}

		public BLPUpolygonStructure NewExtentDefinition()
		{
			return new BLPUpolygonStructure(domNode.OwnerDocument.CreateElement("ExtentDefinition", "http://www.govtalk.gov.uk/people/bs7666"));
		}

		public BLPUpolygonStructure GetExtentDefinitionAt(int index)
		{
			return new BLPUpolygonStructure(GetDomChildAt(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentDefinition", index));
		}

		public XmlNode GetStartingExtentDefinitionCursor()
		{
			return GetDomFirstChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentDefinition" );
		}

		public XmlNode GetAdvancedExtentDefinitionCursor( XmlNode curNode )
		{
			return GetDomNextChild( NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentDefinition", curNode );
		}

		public BLPUpolygonStructure GetExtentDefinitionValueAtCursor( XmlNode curNode )
		{
			if( curNode == null )
				  throw new Altova.Xml.XmlException("Out of range");
			else
				return new BLPUpolygonStructure( curNode );
		}


		public BLPUpolygonStructure GetExtentDefinition()
		{
			return GetExtentDefinitionAt(0);
		}

		public BLPUpolygonStructure ExtentDefinition
		{
			get
			{
				return GetExtentDefinitionAt(0);
			}
		}

		public void RemoveExtentDefinitionAt(int index)
		{
			RemoveDomChildAt(NodeType.Element, "http://www.govtalk.gov.uk/people/bs7666", "ExtentDefinition", index);
		}

		public void RemoveExtentDefinition()
		{
			while (HasExtentDefinition())
				RemoveExtentDefinitionAt(0);
		}

		public XmlNode AddExtentDefinition(BLPUpolygonStructure newValue)
		{
			return AppendDomElement("http://www.govtalk.gov.uk/people/bs7666", "ExtentDefinition", newValue);
		}

		public void InsertExtentDefinitionAt(BLPUpolygonStructure newValue, int index)
		{
			InsertDomElementAt("http://www.govtalk.gov.uk/people/bs7666", "ExtentDefinition", index, newValue);
		}

		public void ReplaceExtentDefinitionAt(BLPUpolygonStructure newValue, int index)
		{
			ReplaceDomElementAt("http://www.govtalk.gov.uk/people/bs7666", "ExtentDefinition", index, newValue);
		}
		#endregion // ExtentDefinition accessor methods

		#region ExtentDefinition collection
        public ExtentDefinitionCollection	MyExtentDefinitions = new ExtentDefinitionCollection( );

        public class ExtentDefinitionCollection: IEnumerable
        {
            BLPUextentStructure parent;
            public BLPUextentStructure Parent
			{
				set
				{
					parent = value;
				}
			}
			public ExtentDefinitionEnumerator GetEnumerator() 
			{
				return new ExtentDefinitionEnumerator(parent);
			}
		
			IEnumerator IEnumerable.GetEnumerator() 
			{
				return GetEnumerator();
			}
        }

        public class ExtentDefinitionEnumerator: IEnumerator 
        {
			int nIndex;
			BLPUextentStructure parent;
			public ExtentDefinitionEnumerator(BLPUextentStructure par) 
			{
				parent = par;
				nIndex = -1;
			}
			public void Reset() 
			{
				nIndex = -1;
			}
			public bool MoveNext() 
			{
				nIndex++;
				return(nIndex < parent.ExtentDefinitionCount );
			}
			public BLPUpolygonStructure  Current 
			{
				get 
				{
					return(parent.GetExtentDefinitionAt(nIndex));
				}
			}
			object IEnumerator.Current 
			{
				get 
				{
					return(Current);
				}
			}
    	}

        #endregion // ExtentDefinition collection

        private void SetCollectionParents()
        {
            MySourceDescriptions.Parent = this; 
            MyExtentEntryDates.Parent = this; 
            MyExtentSourceDates.Parent = this; 
            MyExtentStartDates.Parent = this; 
            MyExtentEndDates.Parent = this; 
            MyExtentLastUpdateDates.Parent = this; 
            MyExtentDefinitions.Parent = this; 
	}
}
}
